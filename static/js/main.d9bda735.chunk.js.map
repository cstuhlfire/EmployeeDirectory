{"version":3,"sources":["utils/API.js","components/SearchForm/SearchForm.js","components/ResultList/ResultList.js","components/Container/Container.js","components/SearchResultContainer.js","components/Jumbotron/Jumbotron.js","App.js","index.js"],"names":["API","search","axios","get","SearchForm","props","className","htmlFor","onChange","handleInputChange","value","name","type","placeholder","id","onClick","handleGetNew","ResultList","employees","results","employeeRows","filter","employee","first","toLowerCase","includes","last","map","style","textAlign","alt","src","picture","medium","email","cell","scope","data-name","data-sort","sortByName","Container","children","SearchResultContainer","state","searchEmployees","then","res","setState","data","catch","err","console","log","event","target","preventDefault","nameA","nameB","sortedResults","nameType","getAttribute","sortType","sort","a","b","toUpperCase","this","Component","Jumbotron","title","subtext","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9bda735.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Set the BASEURL to point at the randomuser API to return 100 records\nconst BASEURL = \"https://randomuser.me/api/?inc=name,email,picture,cell&nat=us&results=100\";\n\n// Set API to search the randomuser API\nconst API = {\n  search: function() {\n    return axios.get(BASEURL);\n  }\n};\n\n// export API\nexport default API;\n","import React from \"react\";\nimport \"./styles.css\";\n\nfunction SearchForm(props) {\n  return (\n      <form>\n        <div className=\"form-group custom-form\">\n          <label htmlFor=\"search\">Search:</label>\n          <input\n            onChange={props.handleInputChange}\n            value={props.search}\n            name=\"search\"\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Filter employees by first and last name\"\n            id=\"search\"\n          />\n          <button onClick={props.handleGetNew} className=\"btn btn-primary mt-3\">\n            Get New Set of Employees\n          </button>\n        </div>\n      </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\nimport \"./styles.css\";\n\nfunction ResultList(props) {\n  let employees = props.results;\n\n  employees  = employees.filter((employee) => employee.name.first.toLowerCase().includes(props.search.toLowerCase()) === true || \n                                              employee.name.last.toLowerCase().includes(props.search.toLowerCase()) === true);\n \n  // map employees results array into table rows\n  let employeeRows = employees.map(employee => (\n    <tr key={employee.cell}>      \n      <td style={{textAlign: \"center\"}}>{<img alt={employee.name.last} className=\"img-fluid\" src={employee.picture.medium} />}</td>\n      <td>{employee.name.first}</td>\n      <td>{employee.name.last}</td>\n      <td>{employee.email}</td>\n      <td>{employee.cell}</td>\n    </tr>\n    ));\n\n    return (\n      // create header for table\n      <div>\n\n      <p><i>Click on the up and down arrows to sort by column</i></p>\n      <table className=\"table table-bordered table-hover\">\n          <thead> \n            <tr>\n              <th style={{textAlign: \"center\"}} scope=\"col\">Image</th>\n              <th scope=\"col\">First Name\n                {/* <span className=\"custom-btn custom-btn-down\" data-name=\"first\" data-sort=\"asc\" onClick={props.sortByName}>ðŸ”½</span> */}\n                <span className=\"custom-btn custom-btn-down\" data-name=\"first\" data-sort=\"asc\" onClick={props.sortByName}>&#128317;</span>\n                <span className=\"custom-btn\" data-name=\"first\" data-sort=\"desc\" onClick={props.sortByName}>&#128316;</span></th>\n              <th scope=\"col\">Last Name\n                <span className=\"custom-btn custom-btn-down\" data-name=\"last\" data-sort=\"asc\" onClick={props.sortByName}>&#128317;</span>\n                <span className=\"custom-btn\" data-name=\"last\" data-sort=\"desc\" onClick={props.sortByName}>&#128316;</span></th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Cell Phone</th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* add rows */}\n            {employeeRows}\n          </tbody>\n      </table>\n\n      </div>\n  );\n}\n\nexport default ResultList;\n","import React from 'react'\r\nimport \"./styles.css\";\r\n\r\nfunction Container(props) {\r\n    return (\r\n        <div className=\"container custom-container\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport SearchForm from \"./SearchForm/SearchForm\";\nimport ResultList from \"./ResultList/ResultList\";\nimport Container from \"./Container/Container\";\n\nclass SearchResultContainer extends Component {\n  state = {\n    search: \"\",\n    results: []\n  };\n\n  // When this component mounts, search the randomuser API for sample employees\n  componentDidMount() {\n    this.searchEmployees();\n  }\n\n  searchEmployees = () => {\n    API.search()\n      .then(res => this.setState({ results: res.data.results }))\n      .catch(err => console.log(err));\n  };\n\n  // when the input changes set the state to the current value to re-render\n  handleInputChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  // When the form is submitted, search the randomuser API for `this.state.search`\n  handleGetNew = event => {\n    event.preventDefault();\n    this.searchEmployees();\n  };\n\n  sortByName = event => {\n    let nameA;\n    let nameB;\n    let sortedResults = this.state.results;\n    event.preventDefault();\n\n    let nameType = event.target.getAttribute(\"data-name\");\n    let sortType = event.target.getAttribute(\"data-sort\");\n    \n    // sort by name\n    sortedResults.sort(function(a, b) {\n      if (nameType === \"first\") {\n        nameA = a.name.first.toUpperCase(); // ignore upper and lowercase\n        nameB = b.name.first.toUpperCase(); // ignore upper and lowercase\n      } else if (nameType === \"last\") {\n        nameA = a.name.last.toUpperCase(); // ignore upper and lowercase\n        nameB = b.name.last.toUpperCase(); // ignore upper and lowercase    \n      } \n\n      if (sortType === \"asc\") {\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n      } else if (sortType === \"desc\") {\n        if (nameA < nameB) {\n          return 1;\n        }\n        if (nameA > nameB) {\n          return -1;\n        }\n      }\n      // names must be equal\n      return 0;\n    });\n\n    this.setState({ results: sortedResults })\n  }\n\n  render() {\n    return (\n    <>\n      <Container>\n        <SearchForm search={this.state.search}\n                    handleGetNew={this.handleGetNew}\n                    handleInputChange={this.handleInputChange}/>\n        <ResultList search={this.state.search} \n                    results={this.state.results} \n                    sortByName={this.sortByName}/>\n      </Container>\n    </>\n    );\n  }\n}\n\nexport default SearchResultContainer;\n","import React from \"react\";\nimport \"./styles.css\";\n\nfunction Jumbotron(props) {\n  return (\n  <div className=\"jumbotron custom-jumbo\">\n    <div className=\"container\">\n      <h1 className=\"display-4\">{props.title}</h1>\n      <p className=\"lead\">{props.subtext}</p>\n    </div>\n  </div>\n  )\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport SearchResultContainer from \"./components/SearchResultContainer\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\n\nfunction App() {\n  return(\n    <>\n      <Jumbotron title=\"Employee Directory\" subtext=\"Enter search criteria to find and filter employees.\"/>\n      <SearchResultContainer />\n    </>\n    );\n    \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}